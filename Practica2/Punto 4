evaluar = """título: Experiences in Developing a Distributed Agent-based Modeling Toolkit with Python.
resumen: Distributed agent-based modeling (ABM) on high-performance computing resources provides the promise of capturing unprecedented details of large-scale complex systems. However, the specialized knowledge required for developing such ABMs creates barriers to wider adoption and utilization. Here we present our experiences in developing an initial implementation of Repast4Py, a Python-based distributed ABM toolkit. We build on our experiences in developing ABM toolkits, including Repast for High Performance Computing (Repast HPC), to identify the key elements of a useful distributed ABM toolkit. We leverage the Numba, NumPy, and PyTorch packages and the Python C-API to create a scalable modeling system that can exploit the largest HPC resources and emerging computing architectures."""

titulo = evaluar.split("título: ")[1].split("\n")[0] #agarra el texto del titulo en la pos 1, en la pos 0 esta la linea en blanco con "", y agarra hasta que esta el salto de linea en la pos 0, si pones pos 1 agarra lo que esta despues del salto de linea
#print(f"Este es el titulo: {titulo}")
if len(titulo.split()) <= 10:
    print("Titulo: ok")
else:
    print("Titulo: not ok")

resumen = evaluar.split("resumen: ")[1] #agarra lo que esta despues de resumen
#print(f"el resumen seria este: {resumen}")
oraciones = resumen.split(". ")
#print(f"Las oraciones quedan asi: {oraciones}")
categorias = {"facil de leer":0, "aceptable para leer":0, "dificil de leer":0, "muy dificil":0} #inicializo un diccionario con las categorias y la cant 
for elem in oraciones:
    cant_palabras = len(elem.split())#como en la linea oraciones = resumen.split(". ") se creo una lista, que esta separada por " " espacios en blanco, cada vez que termina una oracion vuelve a tomar la longitud de la oracion
    if(cant_palabras <= 12):
        categorias["facil de leer"] +=1
    elif (cant_palabras <=17):
        categorias["aceptable para leer"] +=1
    elif (cant_palabras <=25):
        categorias["dificil de leer"] +=1
    else:
        categorias["muy dificil"] +=1
print(f"Cantidad de oraciones: {categorias}")
